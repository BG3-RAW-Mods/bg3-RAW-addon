new entry "RAW_LONG_JUMP_CHECK"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "RAW_LongJumpCheck"
data "RemoveEvents" "OnSpellCast;OnAttack;OnEntityPickUp;OnEntityDrag;OnLockpickingFinished"
data "RemoveConditions" "not SpellCategoryIs(SpellCategory.Dash)"
data "OnRemoveFunctors" "IF(RemoveCause(StatusRemoveCause.External) and HasStatus('RAW_CURRENT_TURN')):ApplyStatus(RAW_LONG_JUMP_READY);IF(RemoveCause(StatusRemoveCause.Condition) and HasStatus('RAW_CURRENT_TURN') and not HasPassive('Athlete_StandUp')):ApplyStatus(RAW_LONG_JUMP_CHECK,100,3));IF(RemoveCause(StatusRemoveCause.Condition) and HasStatus('RAW_CURRENT_TURN') and HasPassive('Athlete_StandUp')):ApplyStatus(RAW_LONG_JUMP_CHECK,100,1)"
data "StatusPropertyFlags" "FreezeDuration;DisableOverhead;DisableCombatlog;DisablePortraitIndicator"

new entry "RAW_LongJumpCheck"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnMovedDistance"
data "Conditions" "StatusDurationMoreThan(context.Source,'RAW_LONG_JUMP_CHECK',0)"
data "StatsFunctors" "SetStatusDuration(SELF,RAW_LONG_JUMP_CHECK,-1,Add)"

new entry "RAW_LONG_JUMP_READY"
type "StatusData"
data "StatusType" "BOOST"
data "Icon" "PassiveFeature_FastMovement"
data "DisplayName" "4c549cac-6a4c-4da5-a154-37ceb3e4f6ab;1"
data "TickType" "EndTurn"
data "Boosts" "JumpMaxDistanceMultiplier(2)"
data "RemoveEvents" "OnSpellCast;OnAttack;OnEntityPickUp;OnEntityDrag;OnLockpickingFinished"
data "RemoveConditions" "not SpellCategoryIs(SpellCategory.Dash)"
data "OnRemoveFunctors" "IF(HasStatus('RAW_CURRENT_TURN') and not HasPassive('Athlete_StandUp')):ApplyStatus(RAW_LONG_JUMP_CHECK,100,3); IF(HasStatus('RAW_CURRENT_TURN') and HasPassive('Athlete_StandUp')):ApplyStatus(RAW_LONG_JUMP_CHECK,100,1)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog"

new entry "RAW_CURRENT_TURN"
type "StatusData"
using "RAW_CURRENT_TURN"
data "OnApplyFunctors" "ApplyStatus(RAW_DUMMY,100,0);IF(not HasPassive('Athlete_StandUp')):ApplyStatus(RAW_LONG_JUMP_CHECK,100,3); IF(HasPassive('Athlete_StandUp')):ApplyStatus(RAW_LONG_JUMP_CHECK,100,1)"
data "OnRemoveFunctors" "RestoreResource(SneakAttack_Charge,100%,0);RestoreResource(RAW_BonusActionSpellPoint,100%,0);RestoreResource(RAW_NotBonusActionSpellPoint,100%,0);RemoveStatus(RAW_LONG_JUMP_CHECK);ApplyStatus(RAW_DUMMY,100,0)"

new entry "Projectile_Jump"
type "SpellData"
using "Projectile_Jump"
data "UseCosts" "Movement:Distance"
data "TargetRadius" "1.6"
data "AddRangeFromAbility" "Strength,0.305"
data "SpellProperties" "GROUND:ApplyStatus(SELF,RAW_AFTER_JUMP_TERRAIN_CHECK,100,0)"

// When you land in difficult terrain, you must succeed on a DC 10 Dexterity (Acrobatics) check to land on your feet. Otherwise, you land prone
new entry "RAW_AFTER_JUMP_TERRAIN_CHECK"
type "StatusData"
data "StatusType" "BOOST"
data "OnRemoveFunctors" "IF(HasStatus('SG_DifficultTerrain') and not SkillCheck(Skill.Acrobatics, 10)):ApplyStatus(PRONE_FALLEN,100,2)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator"

// Do we want an impratical high jump ?
// new entry "Projectile_High_Jump"
// type "SpellData"
// data "SpellType" "Projectile"
// using "Projectile_Jump"
// data "UseCosts" "Movement:Distance"
// data "TargetRadius" "0.91"
// data "MinJumpDistance" "0.6"
// data "AddRangeFromAbility" "Strength,0.304"
// data "DisplayName" "e82d6bbb-2605-4800-8555-aca1a242d7e6"

// Athlete feat: you can jump after moving 5 feet instead of 10
new entry "Athlete_StandUp"
type "PassiveData"
using "Athlete_StandUp"
data "Description" "51bcb59d-133a-44df-8d68-bf8cd65fc69d;1"
data "DescriptionParams" "Distance(1.5);Distance(1);Distance(3)"
data "Boosts" ""

// Champion level 7 passive: distance increased by a number of feet equal to your Strength modifier.
new entry "RemarkableAthlete_Jump"
type "PassiveData"
using "RemarkableAthlete_Jump"
data "Description" "a3cddb60-5f33-4232-ad1c-9f52ad7c03fc;4"
data "Boosts" "IF(StrengthModifier(1)):JumpMaxDistanceBonus(0.3);IF(StrengthModifier(2)):JumpMaxDistanceBonus(0.6);IF(StrengthModifier(3)):JumpMaxDistanceBonus(0.9);IF(StrengthModifier(4)):JumpMaxDistanceBonus(1.2);IF(StrengthModifier(5)):JumpMaxDistanceBonus(1.5);IF(StrengthModifier(6)):JumpMaxDistanceBonus(1.8);IF(StrengthModifier(7)):JumpMaxDistanceBonus(2.1);IF(StrengthModifier(8)):JumpMaxDistanceBonus(2.4);IF(StrengthModifier(9)):JumpMaxDistanceBonus(2.7);IF(StrengthModifier(10)):JumpMaxDistanceBonus(3)"

// Barbarian Tiger Totem, jump increased by 3m instead of 4.5 (which was in fact a 50% multiplier instead of flat distance bonus)
new entry "TotemSpirit_Tiger"
type "PassiveData"
using "TotemSpirit_Tiger"
data "DescriptionParams" "Distance(3)"

new entry "Shout_Rage_Totem_Tiger"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Tiger"
data "ExtraDescriptionParams" "Distance(3)"

new entry "RAGE_TOTEM_TIGER"
type "StatusData"
data "StatusType" "BOOST"
using "RAGE_TOTEM_TIGER"
data "DescriptionParams" "LevelMapValue(RageDamage); Distance(3)"
data "Boosts" "Tag(VFX_RAGE);BlockSpellCast();UnlockSpell(Shout_EndRage);Attribute(ForceMainhandAlternativeEquipBones);JumpMaxDistanceBonus(3)"
