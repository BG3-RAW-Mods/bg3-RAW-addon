// You can use Warding Flare a number of times equal to your Wisdom modifier (a minimum of once). You regain all expended uses when you finish a long rest.
new entry "Interrupt_WardingFlare"
type "InterruptData"
using "Interrupt_WardingFlare"
data "Cost" "ReactionActionPoint:1;WardingFlareUse:1"

new entry "WardingFlareScaling"
type "PassiveData"
data "Boosts" "IF(WisdomModifier(1)):ActionResource(WardingFlareUse,1,0);IF(WisdomModifier(2)):ActionResource(WardingFlareUse,2,0);IF(WisdomModifier(3)):ActionResource(WardingFlareUse,3,0);IF(WisdomModifier(4)):ActionResource(WardingFlareUse,4,0);IF(WisdomModifier(5)):ActionResource(WardingFlareUse,5,0);IF(WisdomModifier(6)):ActionResource(WardingFlareUse,6,0);IF(WisdomModifier(7)):ActionResource(WardingFlareUse,7,0);IF(WisdomModifier(8)):ActionResource(WardingFlareUse,8,0);IF(WisdomModifier(9)):ActionResource(WardingFlareUse,9,0);IF(WisdomModifier(10)):ActionResource(WardingFlareUse,10,0)"
data "BoostContext" "OnStatusApply;OnStatusRemove;OnEquip;OnShortRest;OnCreate;OnLongRest;OnInventoryChanged"
data "Properties" "IsHidden"

// Thunderbolt Strike is now using the reaction system, letting you choose if you want to push back enemies or not
//TODO: need testing
new entry "ThunderboltStrike"
type "PassiveData"
using "ThunderboltStrike"
data "Boosts" "UnlockInterrupt(Interrupt_ThunderboltStrike)"
data "Properties" "IsHidden"
data "StatsFunctorContext" ""
data "Conditions" ""
data "StatsFunctors" ""

new entry "Interrupt_ThunderboltStrike"
type "InterruptData"
data "DisplayName" "hb5fba35fga2b2g42e8gb6cfg843475bddc78;2"
data "Description" "h7f986d84g57d9g4522gae69gcbde1c64747b;2"
data "DescriptionParams" "Distance(3)"
data "Icon" "PassiveFeature_ThunderboltStrike"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "(HasDamageDoneForType(DamageType.Lightning,context.Target) or HasDamageDoneForType(DamageType.Thunder,context.Target)) and TargetSizeEqualOrSmaller(Size.Large)"
//data "Properties" "ApplyStatus(OBSERVER_TARGET,Target_ThunderboltStrike, 100, 0)"
data "Properties" "Force(3, OriginToTarget);ApplyStatus(OBSERVER_TARGET,THUNDERBOLT_STRIKE,100,1)"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER')"
data "EnableContext" "OnStatusApplied"

// new entry "Target_ThunderboltStrike"
// type "StatusData"
// data "StatusType" "EFFECT"
// using "_PASSIVES"
// data "OnApplyFunctors" "Force(3)"

