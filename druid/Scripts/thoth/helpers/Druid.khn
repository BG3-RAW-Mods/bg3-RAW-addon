function WildShapeSaveDC(base)
    base = base or 9
    return base + context.Source.ProficiencyBonus
end

function isMoonDruid(entity)
    local entity = entity or context.Source
    return HasPassive('WildShape_Combat',entity)
end

function DruidLevelLessThan(level)
    return RawClassLevelLessThan('Druid',level)
end

function DruidLevelLesserOrEqualThan(level)
    return RawClassLevelLesserOrEqualThan('Druid',level)
end

function DruidLevelHigherOrEqualThan(level)
    return RawClassLevelHigherOrEqualThan('Druid',level)
end

function DruidLevelEqual(level)
    return RawClassLevelEqual('Druid',level)
end

function DruidLevelBetween(levelMin, levelMax)
    return RawClassLevelBetween('Druid',levelMin,levelMax)
end

function ProficiencyBonusEqual(bonus)
    return ConditionResult(context.Source.ProficiencyBonus == bonus)
end

function hasUsedFirstAttack(error)
    local result = HasStatus('WILDSHAPE_OTHER_ATTACK_WILDSHAPE', context.Source).Result
    return ConditionResult(result, {ConditionError(error)})
end

function hasMovedMoreThan6m()
    local result = StatusDurationEqualOrMoreThan(context.Source,'WILDSHAPE_MOVEMENT_TRACKING',6).Result
    return ConditionResult(result, {ConditionError('Require6MeterMovement')})
end

function isProneWithStatus(status)
    local result = HasStatus(status,context.Source)
    if not result then
        return result
    end
    return ConditionResult(HasStatus('PRONE',context.Target).Result, {ConditionError('RequireProneTarget')})
end

function HasStatusError(status, error)
    local result = HasStatus(status).Result
    return ConditionResult(result, {ConditionError(error)}, {ConditionError(error)})
end

function hasGrapplingWaterElemental(status)
    local enemies = GetEnemiesWithinRange(1.5, context.Target, context.Source)
    if enemies ~= nil and #enemies.Enemies >= 1 then
        for _, entity in ipairs(enemies.Enemies) do
            if HasStatus(status, entity).Result then
                return ConditionResult(true)
            end
        end
    end
    return ConditionResult(false)
end

function hasGrapplingWaterElemental2(status)
    local enemies = GetEnemiesWithinRange(1.5, context.Target, context.Source)
    return ConditionResult(enemies ~= nil)
end

function hasGrapplingWaterElemental3(status)
    return ConditionResult(true)
end
